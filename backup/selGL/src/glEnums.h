#ifndef SELENE_GL_ENUMS_H_
#define SELENE_GL_ENUMS_H_

#include "selGL.h"

static const BEGIN_ENUM(gl)
    ENUM_FIELD(VERSION, GL_),
    ENUM_FIELD(SHADING_LANGUAGE_VERSION, GL_),
    // Clear
    ENUM_FIELD(COLOR_BUFFER_BIT, GL_),
    ENUM_FIELD(DEPTH_BUFFER_BIT, GL_),
    ENUM_FIELD(STENCIL_BUFFER_BIT, GL_),
    // Types
    ENUM_FIELD(BYTE, GL_),
    ENUM_FIELD(UNSIGNED_BYTE, GL_),
    ENUM_FIELD(SHORT, GL_),
    ENUM_FIELD(UNSIGNED_SHORT, GL_),
    ENUM_FIELD(INT, GL_),
    ENUM_FIELD(UNSIGNED_INT, GL_),
    ENUM_FIELD(FLOAT, GL_),
#if !defined(__EMSCRIPTEN__)
    ENUM_FIELD(DOUBLE, GL_),
#endif
    // Enable
    ENUM_FIELD(DEPTH_TEST, GL_),
    ENUM_FIELD(STENCIL_TEST, GL_),
    ENUM_FIELD(SCISSOR_TEST, GL_),
    ENUM_FIELD(BLEND, GL_),
    ENUM_FIELD(CULL_FACE, GL_),
    // Pixel
#if !defined(__EMSCRIPTEN__)
    // ENUM_FIELD(RED, GL_),
    // ENUM_FIELD(RG, GL_),
    ENUM_FIELD(BGR, GL_),
    ENUM_FIELD(BGRA, GL_),
#endif
    ENUM_FIELD(RGB, GL_),
    ENUM_FIELD(RGBA, GL_),
    ENUM_FIELD(DEPTH_COMPONENT, GL_),
    ENUM_FIELD(DEPTH_COMPONENT16, GL_),
#if !defined(__EMSCRIPTEN__)
    ENUM_FIELD(DEPTH_COMPONENT24, GL_),
    ENUM_FIELD(DEPTH_COMPONENT32, GL_),
    ENUM_FIELD(DEPTH_COMPONENT32F, GL_),
    ENUM_FIELD(DEPTH32F_STENCIL8, GL_),
    ENUM_FIELD(DEPTH24_STENCIL8, GL_),
#endif
    // Funcs
    ENUM_FIELD(FUNC_ADD, GL_),
    ENUM_FIELD(FUNC_SUBTRACT, GL_),
    ENUM_FIELD(ZERO, GL_),
    ENUM_FIELD(ONE, GL_),
    ENUM_FIELD(SRC_COLOR, GL_),
    ENUM_FIELD(ONE_MINUS_SRC_COLOR, GL_),
    ENUM_FIELD(SRC_ALPHA, GL_),
    ENUM_FIELD(ONE_MINUS_SRC_ALPHA, GL_),
    ENUM_FIELD(DST_ALPHA, GL_),
    ENUM_FIELD(ONE_MINUS_DST_ALPHA, GL_),
    ENUM_FIELD(DST_COLOR, GL_),
    ENUM_FIELD(ONE_MINUS_DST_COLOR, GL_),
    ENUM_FIELD(SRC_ALPHA_SATURATE, GL_),
    ENUM_FIELD(CONSTANT_COLOR, GL_),
    ENUM_FIELD(ONE_MINUS_CONSTANT_COLOR, GL_),
    ENUM_FIELD(CONSTANT_ALPHA, GL_),
    ENUM_FIELD(ONE_MINUS_CONSTANT_ALPHA, GL_),
    // Draw mode
    ENUM_FIELD(POINTS, GL_),
    ENUM_FIELD(LINES, GL_),
    ENUM_FIELD(TRIANGLES, GL_),
    // Texture targers
    ENUM_FIELD(TEXTURE_2D, GL_),
    // ENUM_FIELD(TEXTURE_CUBE_MAP, GL_),
    // ENUM_FIELD(TEXTURE_CUBE_MAP_NEGATIVE_X, GL_),
    // ENUM_FIELD(TEXTURE_CUBE_MAP_POSITIVE_X, GL_),
    // ENUM_FIELD(TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_),
    // ENUM_FIELD(TEXTURE_CUBE_MAP_POSITIVE_Y, GL_),
    // ENUM_FIELD(TEXTURE_CUBE_MAP_NEGATIVE_Z, GL_),
    // ENUM_FIELD(TEXTURE_CUBE_MAP_POSITIVE_Z, GL_),
    // Texture params
    ENUM_FIELD(TEXTURE_MIN_FILTER, GL_),
    ENUM_FIELD(TEXTURE_MAG_FILTER, GL_),
    ENUM_FIELD(TEXTURE_WRAP_S, GL_),
    ENUM_FIELD(TEXTURE_WRAP_T, GL_),
    ENUM_FIELD(NEAREST, GL_),
    ENUM_FIELD(LINEAR, GL_),
    ENUM_FIELD(REPEAT, GL_),
    ENUM_FIELD(CLAMP_TO_EDGE, GL_),
#if !defined(__EMSCRIPTEN__)
    ENUM_FIELD(CLAMP_TO_BORDER, GL_),
#endif
    // Framebuffer targets
    ENUM_FIELD(FRAMEBUFFER, GL_),
#if !defined(__EMSCRIPTEN__)
    ENUM_FIELD(DRAW_FRAMEBUFFER, GL_),
    ENUM_FIELD(READ_FRAMEBUFFER, GL_),
    ENUM_FIELD(DEPTH_STENCIL_ATTACHMENT, GL_),
#endif
    ENUM_FIELD(COLOR_ATTACHMENT0, GL_),
    ENUM_FIELD(DEPTH_ATTACHMENT, GL_),
    ENUM_FIELD(STENCIL_ATTACHMENT, GL_),
    // Buffer
    ENUM_FIELD(ARRAY_BUFFER, GL_),
    ENUM_FIELD(ELEMENT_ARRAY_BUFFER, GL_),
#if !defined(__EMSCRIPTEN__)
    ENUM_FIELD(UNIFORM_BUFFER, GL_),
    ENUM_FIELD(DYNAMIC_READ, GL_),
    ENUM_FIELD(DYNAMIC_COPY, GL_),
    ENUM_FIELD(STATIC_READ, GL_),
    ENUM_FIELD(STATIC_COPY, GL_),
    ENUM_FIELD(STREAM_READ, GL_),
    ENUM_FIELD(STREAM_COPY, GL_),
#endif
    ENUM_FIELD(DYNAMIC_DRAW, GL_),
    ENUM_FIELD(STATIC_DRAW, GL_),
    ENUM_FIELD(STREAM_DRAW, GL_),
    // Shader
    ENUM_FIELD(FRAGMENT_SHADER, GL_),
    ENUM_FIELD(VERTEX_SHADER, GL_),
#if !defined(__EMSCRIPTEN__)
    ENUM_FIELD(GEOMETRY_SHADER, GL_),
#endif
END_ENUM()

#endif